[{"/home/gheedy/Git Workspace/Movies-app/src/index.js":"1","/home/gheedy/Git Workspace/Movies-app/src/App.js":"2","/home/gheedy/Git Workspace/Movies-app/src/reportWebVitals.js":"3","/home/gheedy/Git Workspace/Movies-app/src/redux/store.js":"4","/home/gheedy/Git Workspace/Movies-app/src/redux/reducers/index.js":"5","/home/gheedy/Git Workspace/Movies-app/src/redux/reducers/errorReducer.js":"6","/home/gheedy/Git Workspace/Movies-app/src/redux/reducers/movieReducer.js":"7","/home/gheedy/Git Workspace/Movies-app/src/components/header/Header.js":"8","/home/gheedy/Git Workspace/Movies-app/src/components/main/Main.js":"9","/home/gheedy/Git Workspace/Movies-app/src/components/main-content/MainContent.js":"10","/home/gheedy/Git Workspace/Movies-app/src/components/slide-show/Slideshow.js":"11","/home/gheedy/Git Workspace/Movies-app/src/components/paginate/Paginate.js":"12","/home/gheedy/Git Workspace/Movies-app/src/components/grid/Grid.js":"13","/home/gheedy/Git Workspace/Movies-app/src/components/rating/Rating.js":"14"},{"size":501,"mtime":1608998779410,"results":"15","hashOfConfig":"16"},{"size":455,"mtime":1609000540920,"results":"17","hashOfConfig":"16"},{"size":385,"mtime":1608988555260,"results":"18","hashOfConfig":"16"},{"size":437,"mtime":1608990403640,"results":"19","hashOfConfig":"16"},{"size":248,"mtime":1608990403640,"results":"20","hashOfConfig":"16"},{"size":147,"mtime":1608990403640,"results":"21","hashOfConfig":"16"},{"size":154,"mtime":1608990403640,"results":"22","hashOfConfig":"16"},{"size":2102,"mtime":1608999299010,"results":"23","hashOfConfig":"16"},{"size":206,"mtime":1609005378040,"results":"24","hashOfConfig":"16"},{"size":1739,"mtime":1609019578560,"results":"25","hashOfConfig":"16"},{"size":3172,"mtime":1609006143920,"results":"26","hashOfConfig":"16"},{"size":1020,"mtime":1609013531260,"results":"27","hashOfConfig":"16"},{"size":940,"mtime":1609019526920,"results":"28","hashOfConfig":"16"},{"size":1375,"mtime":1609019483170,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"3a40ak",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"32"},"/home/gheedy/Git Workspace/Movies-app/src/index.js",[],[],"/home/gheedy/Git Workspace/Movies-app/src/App.js",[],"/home/gheedy/Git Workspace/Movies-app/src/reportWebVitals.js",[],"/home/gheedy/Git Workspace/Movies-app/src/redux/store.js",[],"/home/gheedy/Git Workspace/Movies-app/src/redux/reducers/index.js",[],"/home/gheedy/Git Workspace/Movies-app/src/redux/reducers/errorReducer.js",[],"/home/gheedy/Git Workspace/Movies-app/src/redux/reducers/movieReducer.js",[],"/home/gheedy/Git Workspace/Movies-app/src/components/header/Header.js",[],"/home/gheedy/Git Workspace/Movies-app/src/components/main/Main.js",[],"/home/gheedy/Git Workspace/Movies-app/src/components/main-content/MainContent.js",[],"/home/gheedy/Git Workspace/Movies-app/src/components/slide-show/Slideshow.js",[],"/home/gheedy/Git Workspace/Movies-app/src/components/paginate/Paginate.js",[],"/home/gheedy/Git Workspace/Movies-app/src/components/grid/Grid.js",["61","62"],"import React from 'react';\n\nimport './Grid.scss';\nimport Rating from '../rating/Rating';\n\nconst Grid = (props) => {\n  const { images } = props;\n\n  return (\n    <div className=\"grid\">\n      {images.map((image, i) => (\n        <React.Fragment key={i}>\n          <div className=\"grid-cell\" style={{ backgroundImage: `url(${image.url})` }}>\n            <div className=\"grid-read-more\">\n              <button className=\"grid-cell-button\">Read More</button>\n            </div>\n            <div className=\"grid-detail\">\n              <span className=\"grid-detail-title\">Mission Impossible</span>\n              <div className=\"grid-detail-rating\">\n                <Rating rating={image.rating} totalStars={10} />\n                &nbsp;&nbsp;\n                <div className=\"grid-vote-average\">{image.rating}</div>\n              </div>\n            </div>\n          </div>\n        </React.Fragment>\n      ))}\n    </div>\n  );\n};\n\nexport default Grid;\n","/home/gheedy/Git Workspace/Movies-app/src/components/rating/Rating.js",["63","64"],"import React, { useState, useEffect, Fragment, useRef } from 'react';\n\nimport './Rating.scss';\n\nconst Rating = (props) => {\n  const { rating, totalStars } = props;\n  const [numberOfStars, setNumberOfStars] = useState();\n  const ratingRef = useRef();\n\n  useEffect(() => {\n    // Spreading the array of stars, taking the keys (indexes), we then increment each of the index values by one\n    const starArr = [...Array(totalStars).keys()].map((i) => i + 1);\n    setNumberOfStars(starArr);\n    let percentage;\n    if (rating <= 5) {\n      percentage = (rating / 5) * 100;\n    } else {\n      percentage = (rating / 10) * 100;\n    }\n    const startPercentage = `${Math.floor(percentage)}%`;\n    ratingRef.current.style.width = startPercentage;\n  }, [rating, totalStars]);\n\n  return (\n    <div className=\"star-rating\">\n      <div className=\"back-stars\">\n        {numberOfStars &&\n          numberOfStars.map((i) => (\n            <Fragment key={i}>\n              <i className=\"fa fa-star\" aria-hidden=\"true\"></i>\n            </Fragment>\n          ))}\n        <div className=\"front-stars\" ref={ratingRef}>\n          {numberOfStars &&\n            numberOfStars.map((i) => (\n              <Fragment key={i}>\n                <i className=\"fa fa-star\" aria-hidden=\"true\"></i>\n              </Fragment>\n            ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Rating;\n",{"ruleId":"65","severity":2,"message":"66","line":7,"column":11,"nodeType":"67","endLine":7,"endColumn":17},{"ruleId":"65","severity":2,"message":"68","line":11,"column":15,"nodeType":"69","endLine":11,"endColumn":18},{"ruleId":"65","severity":2,"message":"70","line":6,"column":11,"nodeType":"67","endLine":6,"endColumn":17},{"ruleId":"65","severity":2,"message":"71","line":6,"column":19,"nodeType":"67","endLine":6,"endColumn":29},"react/prop-types","'images' is missing in props validation","Property","'images.map' is missing in props validation","Identifier","'rating' is missing in props validation","'totalStars' is missing in props validation"]